name: Pack-Archive

on:
  push:
    tags: '*'
  workflow_dispatch:
    inputs:
      tag:
        type:     string
        default:  ''
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast:  true

    steps:
      - uses: actions/checkout@v3
      
      - name: 'Setup Pre-Requisites & Prepare Staging Area'
        run:  |
              apt-get update && apt-get install wget unzip
              cd '${{github.workspace}}'
              wget 'https://github.com/WolvenKit/WolvenKit/releases/download/8.5.3/WolvenKit.ConsoleLinux-1.6.5.zip' && unzip './*.zip'
              mv WolvenKit\ CLI\ Linux/ WolvenKit
              chmod -R 0770 ./WolvenKit
              mkdir -p '${{github.workspace}}/STAGING/archive/pc/mod' && mkdir -p '${{github.workspace}}/STAGING/r6/scripts'
              cp '${{github.workspace}}/redscript/REALISTICCOMBATOVERHAUL.reds' '${{github.workspace}}/STAGING/r6/scripts'
              ls -lAgh
                  
      - name: 'Pack .archive'
        run:  |
              cd '${{github.workspace}}/basegame_REALISM'
              ../WolvenKit/WolvenKit.CLI pack -p . -o '../STAGING/archive/pc/mod'
        
      - name:   'Upload Artifact'
        uses:   actions/upload-artifact@v2
        with:
          name: 'HARDCORE44-ARCO'
          path: '${{github.workspace}}/STAGING/*'
        
  create-release:
    runs-on:  ubuntu-latest
    needs:    build
    strategy:
      fail-fast:  true
    
    steps:
      - name:   'Download Artifact'
        uses:   actions/download-artifact@v2
        with:
          name: 'HARDCORE44-ARCO'
          path: '${{github.workspace}}'
          
      - name:   'Get Release Tag'
        id:     get_version
        run:    |
                if [ "${{github.event.inputs.tag}}" == "" ];  then TAG="${GITHUB_REF/refs\/tags\//}"; else TAG="${{github.event.inputs.tag}}" ; fi
                echo ::set-output name=VERSION::$TAG
                echo ::set-output name=NAME::"Release $TAG"
        
      - name:   'Create Release'
        uses:   softprops/action-gh-release@v1
        with:
          draft:                    true
          prerelease:               false
          tag_name:                 ${{ steps.get_version.outputs.VERSION }}
          name:                     ${{ steps.get_version.outputs.NAME }}
          generate_release_notes:   true
          fail_on_unmatched_files:  true
          files:                    ${{ github.workspace }}/*.zip
