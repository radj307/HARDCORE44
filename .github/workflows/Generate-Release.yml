name: Generate-Release

on:
  push:
    tags: '*'
  workflow_dispatch:
    inputs:
      tag:
        type:     string
        default:  ''
        required: false

jobs:
  pack-archive:
    runs-on: windows-latest
    strategy:
      fail-fast:  true

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{github.event.inputs.tag}}
      
      - name:  'Setup Pre-Requisites & Prepare Staging Area'
        shell: |
               pwsh -noninteractive -command "try {{ $ErrorActionPreference='Stop'; . '{0}' }} catch {{ Write-Error ""FAILED: $_""; throw; }} if ((Test-Path -LiteralPath variable:\LASTEXITCODE)) {{ exit $LASTEXITCODE }}"
        run:   |
               cd '${{github.workspace}}'
               Invoke-WebRequest -Method Get -Uri https://github.com/WolvenKit/WolvenKit/releases/download/8.5.3/WolvenKit.Console-1.6.5.zip -OutFile WolvenKit.zip
               Expand-Archive -Path WolvenKit.zip -DestinationPath .
               mv "WolvenKit CLI" WolvenKit
               mkdir '${{github.workspace}}/STAGING/archive/pc/mod'
               mkdir '${{github.workspace}}/STAGING/r6/scripts'
               cp '${{github.workspace}}/redscript/REALISTICCOMBATOVERHAUL.reds' '${{github.workspace}}/STAGING/r6/scripts'
                  
      - name:  'Pack .archive'
        shell: |
               pwsh -noninteractive -command "try {{ $ErrorActionPreference='Stop'; . '{0}' }} catch {{ Write-Error ""FAILED: $_""; throw; }} if ((Test-Path -LiteralPath variable:\LASTEXITCODE)) {{ exit $LASTEXITCODE }}"
        run:   |
               cd '${{github.workspace}}/basegame_REALISM'
               ../WolvenKit/WolvenKit.CLI pack -p . -o '../STAGING/archive/pc/mod'
        
      - name:   'Upload Artifact'
        uses:   actions/upload-artifact@v2
        with:
          name: 'HARDCORE44-ARCO'
          path: '${{github.workspace}}/STAGING/*'

  create-release:
    runs-on:  ubuntu-latest
    needs:    pack-archive
    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v3
        with:
          ref: '${{github.event.inputs.tag}}'
          fetch-depth: 0

      - uses:   actions/download-artifact@v2
        with:
          name: 'HARDCORE44-ARCO'
          path: '${{github.workspace}}'

      - id:     get_version
        shell:  bash
        run:    |
                if [ "${{github.event.inputs.tag}}" == "" ];  then TAG="${GITHUB_REF/refs\/tags\//}"; else TAG="${{github.event.inputs.tag}}" ; fi
                if [ "$TAG" == "refs/heads/main" ]; then TAG=""; fi
                echo ::set-output name=VERSION::$TAG
                echo ::set-output name=NAME::"Release $TAG"
                
      - name:   'Create Release Archive'
        run:    zip -T9r HARDCORE44-ARCO.zip ./*
            
      - name:   'Create Github Release'
        uses:   softprops/action-gh-release@v1
        with:
          draft:                    true
          prerelease:               false
          tag_name:                 ${{ steps.get_version.outputs.VERSION }}
          name:                     ${{ steps.get_version.outputs.NAME }}
          generate_release_notes:   true
          fail_on_unmatched_files:  true
          files:                    './*.zip'
